#!/usr/local/bin/python3
import numpy as np
import sys
from matplotlib import rcParams
import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import math
import matplotlib.cm
from matplotlib.ticker import MultipleLocator
from matplotlib.patches import Rectangle
import random

rcParams['font.family'] = 'serif'
rcParams['font.serif'] = ['CMU Serif']
rcParams['font.size'] = 14
colormap = 3
defaultCM = matplotlib.cm.tab20

data = [
    (250.014, [(256, 266.423), (256, 266.423), (256, 265.871), (256, 265.871), (256, 265.871), (256, 265.871), (256, 265.871), (256, 265.871), (256, 265.871), (256, 265.871), (512, 261.045), (512, 245.494), (512, 245.494), (512, 245.494), (512, 245.494), (512, 246.888), (512, 246.888), (512, 246.888), (512, 246.888), (512, 252.924), (1024, 251.702), (1024, 251.702), (1024, 246.888), (1024, 246.888), (1024, 252.691), (1024, 252.691), (1024, 243.887), (1024, 243.887), (1024, 247.123), (1024, 247.123), (2048, 243.887), (2048, 247.123), (2048, 249.756), (2048, 247.781), (2048, 244.181), (2048, 243.887), (2048, 244.181), (2048, 244.181), (2048, 247.738), (2048, 246.762),]),
    (311.275, [(256, 311.275), (256, 311.275), (256, 311.275), (256, 311.275), (256, 311.275), (256, 311.275), (256, 339.334), (256, 339.334), (256, 339.334), (256, 339.334), (512, 317.637), (512, 317.637), (512, 321.73), (512, 321.73), (512, 321.73), (512, 321.73), (512, 321.73), (512, 309.626), (512, 309.626), (512, 309.626), (1024, 305.314), (1024, 308.338), (1024, 308.338), (1024, 313.127), (1024, 313.127), (1024, 303.525), (1024, 303.525), (1024, 307.539), (1024, 307.539), (1024, 306.842), (2048, 306.842), (2048, 308.452), (2048, 303.474), (2048, 302.835), (2048, 306.842), (2048, 316.66), (2048, 306.842), (2048, 317.637), (2048, 302.75), (2048, 306.842),]),
    (341.499, [(256, 350.988), (256, 350.988), (256, 350.988), (256, 369.837), (256, 369.837), (256, 369.837), (256, 369.837), (256, 369.837), (256, 369.837), (256, 369.837), (512, 345.381), (512, 339.991), (512, 339.991), (512, 339.991), (512, 339.991), (512, 334.243), (512, 334.243), (512, 334.243), (512, 334.975), (512, 334.975), (1024, 331.615), (1024, 326.059), (1024, 326.059), (1024, 333.023), (1024, 335.052), (1024, 335.052), (1024, 321.52), (1024, 321.52), (1024, 323.288), (1024, 323.288), (2048, 331.615), (2048, 332.913), (2048, 330.998), (2048, 326.06), (2048, 331.615), (2048, 330.962), (2048, 329.7), (2048, 320.896), (2048, 344.286), (2048, 332.667),]),
    (431.012, [(256, 506.894), (256, 506.894), (256, 501.641), (256, 501.641), (256, 501.641), (256, 527.587), (256, 527.587), (256, 527.587), (256, 527.587), (256, 527.587), (512, 515.74), (512, 515.74), (512, 480.52), (512, 457.908), (512, 457.908), (512, 475.912), (512, 447.991), (512, 447.991), (512, 493.227), (512, 463.745), (1024, 453.725), (1024, 463.155), (1024, 465), (1024, 452.165), (1024, 481.705), (1024, 451.943), (1024, 455.019), (1024, 474.406), (1024, 515.623), (1024, 455.133), (2048, 448.96), (2048, 439.367), (2048, 455.231), (2048, 457.34), (2048, 457.994), (2048, 479.321), (2048, 460.637), (2048, 451.463), (2048, 448.479), (2048, 464.277),]),
    (312.892, [(256, 327.351), (256, 327.351), (256, 327.351), (256, 320.657), (256, 320.657), (256, 320.657), (256, 320.657), (256, 320.657), (256, 320.657), (256, 320.657), (512, 309.945), (512, 309.945), (512, 309.945), (512, 318.431), (512, 318.431), (512, 318.431), (512, 308.697), (512, 308.697), (512, 308.697), (512, 323.652), (1024, 321.855), (1024, 302.994), (1024, 303.858), (1024, 305.39), (1024, 305.39), (1024, 326.354), (1024, 310.786), (1024, 313.904), (1024, 313.904), (1024, 313.023), (2048, 300.297), (2048, 304.582), (2048, 298.192), (2048, 311.088), (2048, 298.251), (2048, 305.487), (2048, 300.351), (2048, 301.669), (2048, 298.439), (2048, 299.369),]),
]

fig, axs = plt.subplots(1, len(data), figsize=(9, 3), sharex=False, sharey=False)
# plt.subplots_adjust(left=0.1, bottom=0.22, right=0.95, top=0.88, wspace=0.10, hspace=0.24)

ymax = max(x[0] for x in data)

for experimentIndex in range(len(data)):
    expData = data[experimentIndex]

    ax = axs[experimentIndex]
    plt.sca(ax)

    bars = [
        256,
        512,
        1024,
        2048
    ]

    barData = [[x[1] for x in expData[1] if x[0] == its] for its in bars]
    # barData.insert(0, [expData[0]])
    # print(barData)
    # plt.boxplot(barData)
    plt.ylim(bottom=0, top=ymax*1.3)

    # print(expData[0])
    # plt.bar([0], [expData[0]], color="#377eb8")
    plt.plot([0, 4.4], [expData[0], expData[0]], '--', color="#000000")
    plt.scatter([bars.index(x[0])+1 + random.uniform(-0.15, 0.15) for x in expData[1]], [x[1] for x in expData[1]], alpha=0.5, color="#e41a1c")
    plt.xlim(0.5, 4.5)
    plt.xticks([1, 2, 3, 4])
    ax.set_xticklabels([str(x) for x in bars])
    plt.xticks(rotation=-90)
    # ax.tick_params(length=0)

    if experimentIndex == 0:
        ax.tick_params(top=False, bottom=False, left=True, right=False, labelleft=True, labelright=False)
        plt.yticks([0, 100, 200, 300, 400, 500])
        plt.ylabel("Time [s]")
    elif experimentIndex == len(data) - 1:
        ax.tick_params(top=False, bottom=False, left=False, right=True, labelleft=False, labelright=True)
        ax.set_yticks([expData[0]])
        ax.set_yticklabels(["ProBO"])
    else:
        ax.tick_params(top=False, bottom=False, left=False, right=False, labelleft=False, labelright=False)

    if experimentIndex == len(data)//2:
        plt.xlabel("Generations")

# plt.text(0.43, 0.02, s="Generations", transform=fig.transFigure)
plt.subplots_adjust(left=0.08, bottom=0.26, right=0.92, top=0.95, wspace=0.11)
# plt.tight_layout()
# plt.show()

pdf = PdfPages(f"/Users/arong/cloud/Skolarbeten/ML-2/thesis/draft/graphics/generated/pro_bo.pdf")
pdf.savefig(fig)
pdf.close()
